{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2024-07-31T18:01:11.447Z",
    "end": "2024-07-31T18:01:13.468Z",
    "duration": 2021,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3d5b3b38-1491-4c6c-b05b-781d7255f012",
      "title": "",
      "fullFile": "C:\\Users\\Ericsson Raphael\\Desktop\\Books-API\\test\\upload.test.ts",
      "file": "\\test\\upload.test.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b8a912bb-5184-4397-b0e8-b92133eb4d2f",
          "title": "Books API",
          "fullFile": "C:\\Users\\Ericsson Raphael\\Desktop\\Books-API\\test\\upload.test.ts",
          "file": "\\test\\upload.test.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should successfully upload an image",
              "fullTitle": "Books API It should successfully upload an image",
              "timedOut": true,
              "duration": 2015,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "__awaiter(void 0, void 0, void 0, function* () {\n        console.log(yield chai_1.default.request(app_1.default).post('/api/books'));\n        const initialRes = yield chai_1.default\n            .request(app_1.default)\n            .post('/api/books')\n            .send({\n            title: 'Things Fall Apart',\n            author: 'Chinua Achibe',\n            publishedYear: 1958,\n            ISBN: '978-0385474542'\n        });\n        console.log('rrrrrrrr');\n        const bookId = initialRes.body.data.data.id;\n        console.log(bookId);\n        const res = yield chai_1.default\n            .request(app_1.default)\n            .post(`/api/books/cover-image/${bookId}`)\n            .set('content-type', 'multipart/form-data')\n            .attach('image', fs_1.default.readFileSync(`${__dirname}/imageTest.jpg`), 'test/imageTest.jpg');\n        expect(res.statusCode).to.equal(200);\n        expect(res.body.status).to.equal('success');\n    })",
              "err": {
                "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\Ericsson Raphael\\Desktop\\Books-API\\test\\upload.test.ts)",
                "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (C:\\Users\\Ericsson Raphael\\Desktop\\Books-API\\test\\upload.test.ts)\n    at listOnTimeout (node:internal/timers:581:17)\n    at processTimers (node:internal/timers:519:7)",
                "diff": null
              },
              "uuid": "02750025-9ee5-4b2d-9006-a23fb9f49b8b",
              "parentUUID": "b8a912bb-5184-4397-b0e8-b92133eb4d2f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "02750025-9ee5-4b2d-9006-a23fb9f49b8b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2015,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "test-results"
      },
      "version": "6.2.0"
    }
  }
}